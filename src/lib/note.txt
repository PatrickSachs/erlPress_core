

fit_xml(Content, XML, PanelMap, continue) ->
     [X | Spill] = XML,

     Xml                        = element(2, X),
     Tag                        = get_tag(Xml),
     io:format(" ***************** Tag: ~p~n~n", [Tag]),

     {Lines, Size, Continue}    = fit_lines(Tag, Xml, PanelMap),


     case Continue of
        true  -> Content2 = [{Tag, Lines} | Content],
                 PanelMap1 = ep_panel:update_content_cursor(Size, PanelMap),
                 fit_xml(Content2, Spill, PanelMap1, continue);
        false -> fit_xml(Content, Spill, PanelMap, filled)
     end.


fit_xml(Content, XML, PanelMap, continue) ->
     [X | Spill] = XML,

     Xml                        = element(2, X),
     Tag                        = get_tag(Xml),
     io:format(" ***************** Tag: ~p~n~n", [Tag]),

     {Lines, Size, Continue}    = fit_lines(Tag, Xml, PanelMap),


     case Continue of
        true  -> Content2 = [{Tag, Lines} | Content],
                 PanelMap1 = ep_panel:update_content_cursor(Size, PanelMap),
                 fit_xml(Content2, Spill, PanelMap1, continue);
        false -> fit_xml(Content, Spill, PanelMap, filled)
     end.


paste_elements(PDF, Paste, Cost, PanelMap) ->
    [Paste1 | MorePaste] = Paste,
    Tag                = element(1, Paste1),
    Lines              = element(2, Paste1),
    io:format("==================== Tag: ~p~n", [Tag]),
    io:format("==================== Length Lines: ~p~n~n", [length(Lines)]),
    WillFit   = ep_panel:will_fit(Tag, Lines, PanelMap),
    case WillFit of
       true  -> {Cost1, PanelMap1} = paste_up(PDF, Tag, Lines, Cost, PanelMap),
                PanelMap2          = ep_panel:update_panel(Tag, Lines, PanelMap1),
                Paste2             = MorePaste,
                % Recurse
                paste_elements(PDF, Paste2, Cost1, PanelMap2);
       false -> paste_elements(PDF, [], Cost, PanelMap)
     end.


paste_up(PDF, Tag, Lines, Cost, PanelMap) ->
    {Cost1, PanelMap1} = paste_lines(PDF, Tag, Lines, Cost, PanelMap),
    ok                 = paste_if_ul(PDF, Tag, Lines, PanelMap),
    ok                 = paste_if_ci(PDF, Tag, PanelMap),
    {Cost1, PanelMap1}.

paste_up(PDF, Tag, Lines, Cost, PanelMap) ->
    {Cost1, PanelMap1} = paste_lines(PDF, Tag, Lines, Cost, PanelMap),
    ok                 = paste_if_ul(PDF, Tag, Lines, PanelMap),
    ok                 = paste_if_ci(PDF, Tag, PanelMap),
    {Cost1, PanelMap1}.


pdf_code(PDF, Tag, Lines, Widths, Offsets, PanelMap) ->
   {TextX, TextY}                       = text_placement(Tag, PanelMap),
   Rot                                  = ep_panel:get_rot(PanelMap),
   TypeStyle                            = ep_panel:get_typestyle(PanelMap),
   Justify                              = ep_typespec:justify(TypeStyle, Tag),
   Leading                              = ep_typespec:leading(TypeStyle, Tag),
   Code = ep_richText2pdf:richText2pdf(PDF,
                                       TextX,
                                       TextY,
                                       Justify,
                                       Rot,
                                       Lines,
                                       Leading,
                                       Widths,
                                       Offsets),
    Code.

text_placement(ul, PanelMap) ->
   {X, Y} =  ep_panel:get_text_position(PanelMap),
   {X + 30, Y};

text_placement(_Tag, PanelMap) ->
    ep_panel:get_text_position(PanelMap).

